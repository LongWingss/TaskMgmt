// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskMgmt.DataAccess.Models;

#nullable disable

namespace TaskMgmt.DataAccess.Migrations
{
    [DbContext(typeof(TaskMgmntContext))]
    [Migration("20240108150016_initialCreation")]
    partial class initialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("GroupId");

                    b.HasIndex(new[] { "GroupName" }, "UQ__Groups__6EFCD434B002C7D3")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Invitation", b =>
                {
                    b.Property<int>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvitationId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("InvitedByUser")
                        .HasColumnType("int");

                    b.Property<string>("InviteeEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("InvitationId");

                    b.HasIndex("GroupId");

                    b.HasIndex("InvitedByUser");

                    b.HasIndex(new[] { "Token" }, "UQ__Invitati__1EB4F817DED1151F")
                        .IsUnique()
                        .HasFilter("[Token] IS NOT NULL");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ProjectId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053471315D2F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.UserGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("UserId", "GroupId")
                        .HasName("PK__UserGrou__A6C1637AF06BF7C5");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Invitation", b =>
                {
                    b.HasOne("TaskMgmt.DataAccess.Models.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Invitatio__Group__44FF419A");

                    b.HasOne("TaskMgmt.DataAccess.Models.User", "InvitedByUserNavigation")
                        .WithMany("Invitations")
                        .HasForeignKey("InvitedByUser")
                        .IsRequired()
                        .HasConstraintName("FK__Invitatio__Invit__45F365D3");

                    b.Navigation("Group");

                    b.Navigation("InvitedByUserNavigation");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Project", b =>
                {
                    b.HasOne("TaskMgmt.DataAccess.Models.Group", "Group")
                        .WithMany("Projects")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Projects__GroupI__4AB81AF0");

                    b.HasOne("TaskMgmt.DataAccess.Models.User", "Owner")
                        .WithMany("Projects")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Projects__OwnerI__4BAC3F29");

                    b.Navigation("Group");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.UserGroup", b =>
                {
                    b.HasOne("TaskMgmt.DataAccess.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGroup__Group__403A8C7D");

                    b.HasOne("TaskMgmt.DataAccess.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGroup__UserI__3F466844");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.Group", b =>
                {
                    b.Navigation("Invitations");

                    b.Navigation("Projects");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("TaskMgmt.DataAccess.Models.User", b =>
                {
                    b.Navigation("Invitations");

                    b.Navigation("Projects");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
